(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #3=(headline (:raw-value #1="быт" :begin 32 :end 1841 :pre-blank 0 :contents-begin 38 :contents-end 1841 :robust-begin 40 :robust-end 1839 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 32 :title #1# :parent #5=(org-data (:begin 1 :contents-begin 1 :contents-end 1875 :end 1875 :robust-begin 3 :robust-end 1873 :post-blank 0 :post-affiliated 1 :path "/home/ash/org/todo.org" :mode org-data :CATEGORY "todo" :cached t :org-element--cache-sync-key nil)) :cached t :granularity element :org-element--cache-sync-key nil)) 0] [nil nil #6=(headline (:raw-value #2="сварить суп" :begin 165 :end 200 :pre-blank 6 :contents-begin 191 :contents-end 200 :robust-begin 193 :robust-end 198 :level 2 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (face (org-todo org-level-2) wrap-prefix #("** " 0 3 (face org-indent)) line-prefix "" fontified t)) :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 165 :title #2# :parent #3# :cached t :org-element--cache-sync-key nil :granularity element)) 0] #7=(headline (:raw-value #4="протереть пыль:" :begin 38 :end 109 :pre-blank 0 :contents-begin 57 :contents-end 109 :robust-begin 59 :robust-end 107 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 38 :title #4# :mode section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[nil nil #5# 0] [nil nil #3# 0] (section (:begin 1 :end 32 :contents-begin 1 :contents-end 31 :robust-begin 1 :robust-end 29 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) 0] [nil nil #6# 0] #7# -1] nil nil 0] org-element--cache-compare)))